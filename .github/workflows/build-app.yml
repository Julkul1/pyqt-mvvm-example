name: Build App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            activate: .\.venv\Scripts\activate
            add_data: '"app/views/counter_view.qss;app/views"'
            binary: dist/main.exe
          - os: ubuntu-latest
            activate: . .venv/bin/activate
            add_data: "app/views/counter_view.qss:app/views"
            binary: dist/main
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m venv .venv
          ${{ matrix.activate }}
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build executable with PyInstaller
        run: |
          ${{ matrix.activate }}
          pyinstaller --onefile --add-data=${{ matrix.add_data }} main.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: ${{ matrix.binary }}
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: List dist directory
        run: ls -R dist
      - name: Get version from config.ini
        id: get_version
        run: |
          VERSION=$(awk -F '=' '/version/ {print $2}' config.ini | tr -d ' ')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Draft Release Notes
        uses: release-drafter/release-drafter@v6
        id: create_release_notes
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: ${{ steps.create_release_notes.outputs.body }}
          files: |
            dist/**/*.exe
            dist/**/main
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
